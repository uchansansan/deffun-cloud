micronaut:
  application:
    name: deffunCloud
  router:
    static-resources:
      default:
        enabled: true
        mapping: "/**"
        paths:
          - "classpath:public"
  server:
    cors:
      enabled: true
  security:
    authentication: idtoken
    oauth2:
      clients:
        google:
          client-id: '${GOOGLE_OAUTH_CLIENT_ID}'
          client-secret: '${GOOGLE_OAUTH_CLIENT_SECRET}'
          openid:
            issuer: 'https://accounts.google.com'
    redirect:
      unauthorized:
        url: "/login"
    intercept-url-map:
      - pattern: "/**"
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: "/graphql"
        httpMethod: POST
        access:
          - isAnonymous()
    endpoints:
      logout:
        get-allowed: true
  executors:
    deployment:
      type: fixed
      core-pool-size: 20
datasources:
  default:
    driverClassName: org.mariadb.jdbc.Driver
    db-type: mariadb
    dialect: MYSQL
  h2:
    url: jdbc:h2:mem:devDb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
    schema-generate: CREATE_DROP
    dialect: H2
jpa:
  default:
    entity-scan:
      packages: io.deffun
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: true
        format_sql: true
#      javax:
#        persistence:
#          schema-generation:
#            create-source: metadata
#            scripts:
#              action: create
#              create-target: create.sql
flyway:
  datasources:
    default:
      enabled: true
graphql:
  graphiql:
    enabled: true
  graphql-ws:
    enabled: true
netty:
  default:
    allocator:
      max-order: 3
deffun:
  dokku:
    host: '${DOKKU_HOST}'
    keyFile: '${DOKKU_KEY_FILE}'
    keyPassphrase: '${DOKKU_KEY_PASSPHRASE}'
